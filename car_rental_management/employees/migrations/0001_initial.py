# Generated by Django 2.1 on 2018-10-25 09:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Citylist',
            fields=[
                ('cityid', models.IntegerField(db_column='cityID', primary_key=True, serialize=False)),
                ('cityname', models.CharField(blank=True, db_column='cityName', max_length=50, null=True)),
                ('citystate', models.CharField(blank=True, db_column='cityState', max_length=5, null=True)),
                ('citycountry', models.CharField(blank=True, db_column='cityCountry', max_length=50, null=True)),
            ],
            options={
                'db_table': 'citylist',
                'ordering': ['cityid'],
                
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerid', models.IntegerField(db_column='customerID', primary_key=True, serialize=False)),
                ('customerfirstname', models.CharField(db_column='customerFirstName', max_length=50)),
                ('customerlastname', models.CharField(db_column='customerLastName', max_length=50)),
                ('customerdob', models.DateField(blank=True, db_column='customerDOB', null=True)),
                ('customeraddress', models.CharField(blank=True, db_column='customerAddress', max_length=50, null=True)),
                ('customeroccupation', models.CharField(blank=True, db_column='customerOccupation', max_length=50, null=True)),
                ('customergender', models.CharField(blank=True, db_column='customerGender', max_length=1, null=True)),
            ],
            options={
                'db_table': 'customer',
                'ordering': ['customerid'],
                
            },
        ),
        migrations.CreateModel(
            name='Customerphonenumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=13)),
            ],
            options={
                'db_table': 'customerphonenumber',
                
            },
        ),
		migrations.CreateModel(
            name='Employeerole',
            fields=[
                ('roleid', models.AutoField(db_column='roleID', primary_key=True, serialize=False)),
                ('rolename', models.CharField(db_column='roleName', max_length=30)),
                ('roleaccesslevel', models.IntegerField(db_column='roleAccessLevel')),
            ],
            options={
                'db_table': 'employeerole',
                
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employeeid', models.AutoField(db_column='employeeID', primary_key=True, serialize=False)),
                ('employeefirstname', models.CharField(db_column='employeeFirstName', max_length=50)),
                ('employeelastname', models.CharField(db_column='employeeLastName', max_length=50)),
                ('employeedob', models.DateField(blank=True, db_column='employeeDOB', null=True)),
                ('employeeaddress', models.CharField(blank=True, db_column='employeeAddress', max_length=50, null=True)),
                ('employeecityid', models.ForeignKey('Citylist', models.DO_NOTHING, db_column='employeeCityID', blank=True, null=True)),
                ('employeeemail', models.CharField(blank=True, db_column='employeeEmail', max_length=100, null=True)),
                ('employeephonenumber', models.IntegerField(blank=True, db_column='employeePhoneNumber', null=True)),
                ('roleid', models.ForeignKey('Employeerole', models.DO_NOTHING, db_column='roleID', blank=True, null=True)),
                ('employeeusername', models.CharField(blank=True, db_column='employeeUsername', max_length=50, null=True)),
                ('employeepassword', models.CharField(blank=True, db_column='employeePassword', max_length=100, null=True)),
                ('employeeemailverify', models.CharField(db_column='employeeEmailVerify', default='0', max_length=40)),
                ('employeeloginattempt', models.IntegerField(db_column='employeeLoginAttempt', default=0)),
            ],
            options={
                'db_table': 'employee',
                'ordering': ['employeeid'],
            },
        ),        
        
        migrations.CreateModel(
            name='Store',
            fields=[
                ('storeid', models.IntegerField(db_column='storeID', primary_key=True, serialize=False)),
                ('storename', models.CharField(blank=True, db_column='storeName', max_length=50, null=True)),
                ('storeaddress', models.CharField(blank=True, db_column='storeAddress', max_length=50, null=True)),
                ('storephonenumber', models.CharField(blank=True, db_column='storePhoneNumber', max_length=13, null=True)),
                ('storecityid', models.ForeignKey('Citylist', models.DO_NOTHING, db_column='storeCityID', blank=True, null=True)),
            ],
            options={
                'db_table': 'store',
                'ordering': ['storeid'],
                
            },
        ),
		migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicleid', models.IntegerField(db_column='vehicleID', primary_key=True, serialize=False)),
                ('makename', models.CharField(blank=True, db_column='makeName', max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('series', models.CharField(blank=True, max_length=50, null=True)),
                ('seriesyear', models.IntegerField(blank=True, db_column='seriesYear', null=True)),
                ('pricenew', models.DecimalField(blank=True, db_column='priceNew', decimal_places=2, max_digits=15, null=True)),
                ('enginesize', models.DecimalField(blank=True, db_column='engineSize', decimal_places=1, max_digits=2, null=True)),
                ('fuelsystem', models.CharField(blank=True, db_column='fuelSystem', max_length=50, null=True)),
                ('tankcapacity', models.DecimalField(blank=True, db_column='tankCapacity', decimal_places=1, max_digits=4, null=True)),
                ('power', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('seatingcapacity', models.IntegerField(blank=True, db_column='seatingCapacity', null=True)),
                ('standardtransmission', models.CharField(blank=True, db_column='standardTransmission', max_length=15, null=True)),
                ('bodytype', models.CharField(blank=True, db_column='bodyType', max_length=50, null=True)),
                ('wheeldrive', models.CharField(blank=True, db_column='wheelDrive', max_length=3, null=True)),
                ('wheelbase', models.DecimalField(blank=True, db_column='wheelBase', decimal_places=1, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'vehicle',
                
            },
        ),
		migrations.CreateModel(
            name='Salesorder',
            fields=[
                ('orderid', models.IntegerField(db_column='orderID', primary_key=True, serialize=False)),
                ('createdate', models.DateField(blank=True, db_column='createDate', null=True)),
                ('pickupdate', models.DateField(blank=True, db_column='pickupDate', null=True)),
                ('returndate', models.DateField(blank=True, db_column='returnDate', null=True)),
                ('pickupstoreid', models.ForeignKey('Store', models.DO_NOTHING, db_column='pickupStoreID', related_name='pickupStoreID', blank=True, null=True)),
                ('returnstoreid', models.ForeignKey('Store', models.DO_NOTHING, db_column='returnStoreID', related_name='returnStoreID', blank=True, null=True)),  # Field name made lowercase.
                ('customerid', models.ForeignKey('Customer', models.DO_NOTHING, db_column='customerID', blank=True, null=True)),  # Field name made lowercase.
                ('vehicleid', models.ForeignKey('Vehicle', models.DO_NOTHING, db_column='vehicleID', blank=True, null=True)),  # Field name made lowercase.
            ],
            options={
                'db_table': 'salesorder',
                'ordering': ['orderid'],
            },
        ),
		
        migrations.CreateModel(
            name='V_CarpCitypMonth',
            fields=[
                ('misCity', models.CharField(db_column='city', max_length=50, primary_key=True, serialize=False)),
                ('misMake', models.CharField(blank=True, db_column='make', max_length=50, null=True)),
                ('misModel', models.CharField(blank=True, db_column='model', max_length=50, null=True)),
                ('misMonth', models.CharField(blank=True, db_column='dateMonth', max_length=50, null=True)),
                ('misQuarter', models.IntegerField(blank=True, db_column='dateQuarter', null=True)),
                ('misYear', models.IntegerField(blank=True, db_column='dateYear', null=True)),
                ('misQuantity', models.IntegerField(blank=True, db_column='quantity', null=True)),
            ],
            options={
                'db_table': 'v_carpcitypmonth',
                
            },
        ),
        migrations.CreateModel(
            name='V_Cities',
            fields=[
                ('mis_cityID', models.IntegerField(db_column='cityID', primary_key=True, serialize=False)),
                ('mis_cityName', models.CharField(db_column='cityName', max_length=50)),
            ],
            options={
                'db_table': 'v_cities',
                
            },
        ),
        migrations.CreateModel(
            name='V_PickupDiffCarsCity',
            fields=[
                ('psPickupCityID', models.IntegerField(db_column='cityID')),
                ('psPickupCity', models.CharField(db_column='pickupCity', max_length=50, primary_key=True, serialize=False)),
                ('psDateMonth', models.CharField(blank=True, db_column='dateMonth', max_length=50, null=True)),
                ('psDateQuarter', models.IntegerField(blank=True, db_column='dateQuarter', null=True)),
                ('psYear', models.IntegerField(blank=True, db_column='dateYear', null=True)),
                ('psNumDiffCars', models.IntegerField(blank=True, db_column='quantity', null=True)),
            ],
            options={
                'db_table': 'v_pickupdiffcarscity',
                
            },
        ),
        migrations.CreateModel(
            name='V_ReturnDiffCarsCity',
            fields=[
                ('prReturnCityID', models.IntegerField(db_column='cityID')),
                ('prReturnCity', models.CharField(db_column='returnCity', max_length=50, primary_key=True, serialize=False)),
                ('prDateMonth', models.CharField(blank=True, db_column='dateMonth', max_length=50, null=True)),
                ('prDateQuarter', models.IntegerField(blank=True, db_column='dateQuarter', null=True)),
                ('prYear', models.IntegerField(blank=True, db_column='dateYear', null=True)),
                ('prNumDiffCars', models.IntegerField(blank=True, db_column='quantity', null=True)),
            ],
            options={
                'db_table': 'v_returndiffcarscity',
                
            },
        ),
    ]
